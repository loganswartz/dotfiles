# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

exec ~/.config/sway/update-env.sh

### Variables
#
# Mod4 = Logo key; Mod1 = Alt
set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show drun | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
input type:touchpad {
    dwt enabled
    tap enabled
    natural_scroll enabled
    middle_emulation enabled
}

input type:keyboard {
    xkb_numlock enabled
}

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
exec_always killall wob; rm -f $WOBSOCK; mkfifo $WOBSOCK && tail -f $WOBSOCK | wob
exec_always kanshi
exec_always nm-applet --indicator
exec_always blueman-applet
# https://github.com/altdesktop/playerctl?tab=readme-ov-file#selecting-players-to-control
exec_always playerctld daemon

# lock and suspend
set $LOCK swaylock & systemctl suspend

#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Lock the screen
    bindsym $mod+Ctrl+l exec swaylock

    # Lock the screen and sleep
    # https://copr.fedorainfracloud.org/coprs/mochaa/gtk-session-lock/
    bindsym $mod+Ctrl+Shift+l exec $LOCK
    bindsym XF86PowerOff exec $LOCK

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Hide cursor when typing
    # seat * hide_cursor 5000
    seat * hide_cursor when-typing enable

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#
# Media Controls
#
    set $VOLUME_UP wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.05+ && wpctl get-volume @DEFAULT_AUDIO_SINK@ | cut -d. -f2 > $WOBSOCK
    set $VOLUME_DOWN wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.05- && wpctl get-volume @DEFAULT_AUDIO_SINK@ | cut -d. -f2 > $WOBSOCK
    set $VOLUME_MUTE wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    set $MIC_MUTE wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle

    bindsym F3 exec $VOLUME_DOWN
    bindsym F4 exec $VOLUME_UP
    bindsym F6 exec playerctl previous
    bindsym F7 exec playerctl play-pause
    bindsym F8 exec playerctl next

    bindsym XF86AudioRaiseVolume exec $VOLUME_UP
    bindsym XF86AudioLowerVolume exec $VOLUME_DOWN
    bindsym XF86AudioMute exec $VOLUME_MUTE
    bindsym XF86AudioPlay exec playerctl play
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioPrev exec playerctl previous
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioStop exec playerctl stop
    bindsym XF86AudioMicMute exec $MIC_MUTE
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%- && brightnessctl get --percentage > $WOBSOCK
    bindsym XF86MonBrightnessUp exec brightnessctl set 5%+ && brightnessctl get --percentage > $WOBSOCK

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 75px
    bindsym $down resize grow height 75px
    bindsym $up resize shrink height 75px
    bindsym $right resize grow width 75px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 75px
    bindsym Down resize grow height 75px
    bindsym Up resize shrink height 75px
    bindsym Right resize grow width 75px

    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left+Shift resize shrink width 10px
    bindsym $down+Shift resize grow height 10px
    bindsym $up+Shift resize shrink height 10px
    bindsym $right+Shift resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left+Shift resize shrink width 10px
    bindsym Down+Shift resize grow height 10px
    bindsym Up+Shift resize shrink height 10px
    bindsym Right+Shift resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# adapted from https://github.com/emersion/slurp/pull/28#issuecomment-498192521
bindsym $mod+s exec swaymsg -t get_tree | jq -r 'recurse(.nodes[]?, .floating_nodes[]?) | select(.visible or (.type == "output" and .active)) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp -d | grim -g - - | wl-copy

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
}

gaps inner 15

blur enable
blur_xray enable
blur_passes 3
blur_radius 4

corner_radius 6

# for floating waybar
# layer_effects "waybar" blur enable, corner_radius 20;
layer_effects "waybar" blur enable;
layer_effects "alacritty" blur enable;
layer_effects "gtk-layer-shell" blur enable;

include /etc/sway/config.d/*
include ~/.config/sway/config.d/*
